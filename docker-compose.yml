services:
  postgres:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data  # Attaches the volume to the PostgreSQL data directory
    ports:
      - 5432:5432
    networks:
      - microservice-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - microservice-net
    restart: unless-stopped

  mysql:
    container_name: ms_mysql
    image: mysql
    ports:
      - 3307:3306
    volumes:
      - mysql:/data
    environment:
      MYSQL_USER: mysql
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: mypassword
      MYSQL_DATABASE: mydatabase
      ME_CONFIG_MYSQL_SERVER: ms_mysql

  adminer:  # Using Adminer as a MySQL management tool
    container_name: ms_adminer
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080  # Adminer accessible on port 8080
    environment:
      ME_CONFIG_MYSQL_SERVER: mysql  # Specify the MySQL server
    networks:
      - microservice-net  # Connect Adminer to the same network

  mail-dev:
    container_name: ms_mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025


networks:
  microservice-net:
    driver: bridge

volumes:
  postgres:  # Defines a named volume for PostgreSQL
  pgadmin:   # Defines a named volume for pgAdmin
  mysql:     # Defines a named volume for MySQL
